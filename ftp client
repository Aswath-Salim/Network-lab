#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <arpa/inet.h>

int main() {
    char *ip = "127.0.0.1";
    int port = 8080;
    int e;
    char content[200];

    int sockfd;
    struct sockaddr_in server_addr;
    FILE *fp;
    char filename[200];

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd < 0) {
        perror("[-]Error in socket");
        exit(1);
    }
    printf("[+]Server socket created successfully.\n");

    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(port);
    server_addr.sin_addr.s_addr = inet_addr(ip);

    e = connect(sockfd, (struct sockaddr*)&server_addr, sizeof(server_addr));
    if (e == -1) {
        perror("[-]Error in connection");
        exit(1);
    }
    printf("[+]Connected to Server.\n");

    printf("Enter the filename: ");
    scanf("%s", filename);

    // Check if the filename ends with ".txt"
    if (strstr(filename, ".txt") == NULL || strcmp(filename + strlen(filename) - 4, ".txt") != 0) {
        printf("[-]Error: The file must have a .txt extension.\n");
        close(sockfd);
        exit(1);
    }

    printf("Enter the message to write into the file: ");
    scanf(" %[^\n]", content);  

    fp = fopen(filename, "w");
    if (fp == NULL) {
        perror("[-]Error opening file.");
        close(sockfd);
        exit(1);
    }
    fputs(content, fp);
    fclose(fp);  

    fp = fopen(filename, "r");
    if (fp == NULL) {
        perror("[-]Error in reading file.");
        close(sockfd);
        exit(1);
    }

    printf("[+]Sending file content to server and displaying it:\n");
    char data[200];
   
    while (fgets(data, sizeof(data), fp) != NULL) {
        printf("%s", data);
        if (send(sockfd, data, strlen(data), 0) == -1) {
            perror("[-]Error in sending data.");
            fclose(fp);
            close(sockfd);
            exit(1);
        }
    }

    printf("\n[+]File data sent successfully.\n");

    fclose(fp);
    printf("[+]Closing the connection.\n");
    close(sockfd);

    return 0;
}
